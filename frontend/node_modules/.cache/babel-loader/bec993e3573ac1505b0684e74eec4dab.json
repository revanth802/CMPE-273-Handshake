{"ast":null,"code":"var _jsxFileName = \"/home/revanth802/Desktop/handshake/frontend/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { auth } from '../../ReduxModules/actions/index';\nimport { connect } from 'react-redux'; //Define a Login Component\n\nclass Login extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constrictor of Super classNameName i.e The Component\n    super(props); //maintain the state required for this component\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      authFlag: false,\n      msg: \"\",\n      errmsg: \"\"\n    }; //Bind the handlers to this className\n\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false,\n      msg: \"abc\"\n    });\n  } //username change handler to update state variable with the text entered by the user\n\n\n  //submit Login handler to send a request to the node backend\n  async submitLogin(e) {\n    var _this$props, _this$props2, _this$props3;\n\n    // var headers = new Headers();\n    //prevent page from refresh\n    e.preventDefault();\n    const data = {\n      username: this.state.username,\n      password: this.state.password\n    }; //set the with credentials to true\n\n    axios.defaults.withCredentials = true; //make a post request with the user data\n\n    var loginData = await ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.auth(data));\n    console.log(this.props, loginData);\n    console.log((_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.loginData[0].data);\n\n    if (((_this$props3 = this.props) === null || _this$props3 === void 0 ? void 0 : _this$props3.loginData[0].data) === \"Incorrect Username and/or Password!\") {\n      console.log(\"inside student\");\n      this.setState({\n        msg: \"student\",\n        authFlag: true,\n        errmsg: \"Incorrect Username and/or Password!\"\n      });\n    } else {\n      this.setState({\n        msg: \"company\",\n        authFlag: false\n      });\n    }\n\n    console.log(\"inside function\", this.state.msg);\n  }\n\n  render() {\n    //redirect based on successful login\n    let redirectVar = null;\n    console.log(\"message is\", this.state.msg);\n\n    if (cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Student Signin\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Username: \"), React.createElement(\"input\", {\n      onChange: this.usernameChangeHandler,\n      type: \"text\",\n      className: \"form-control\",\n      name: \"username\",\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(\"input\", {\n      onChange: this.passwordChangeHandler,\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.submitLogin,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loginData: state.login.loginData\n});\n\nexport default connect(mapStateToProps, {\n  auth\n})(Login);","map":{"version":3,"sources":["/home/revanth802/Desktop/handshake/frontend/src/components/Login/Login.js"],"names":["React","Component","axios","cookie","Redirect","auth","connect","Login","constructor","props","usernameChangeHandler","e","setState","username","target","value","passwordChangeHandler","password","state","authFlag","msg","errmsg","bind","submitLogin","componentWillMount","preventDefault","data","defaults","withCredentials","loginData","console","log","render","redirectVar","load","marginTop","mapStateToProps","login"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAAQC,IAAR,QAAmB,kCAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;AACA,MAAMC,KAAN,SAAoBN,SAApB,CAA6B;AACzB;AACAO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;AACA,UAAMA,KAAN,EAFc,CAGd;;AAHc,SAwBlBC,qBAxBkB,GAwBOC,CAAD,IAAO;AAC3B,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAGF,CAAC,CAACG,MAAF,CAASC;AADV,OAAd;AAGH,KA5BiB;;AAAA,SA8BlBC,qBA9BkB,GA8BOL,CAAD,IAAO;AAC3B,WAAKC,QAAL,CAAc;AACVK,QAAAA,QAAQ,EAAGN,CAAC,CAACG,MAAF,CAASC;AADV,OAAd;AAGH,KAlCiB;;AAId,SAAKG,KAAL,GAAa;AACTL,MAAAA,QAAQ,EAAG,EADF;AAETI,MAAAA,QAAQ,EAAG,EAFF;AAGTE,MAAAA,QAAQ,EAAG,KAHF;AAITC,MAAAA,GAAG,EAAE,EAJI;AAKTC,MAAAA,MAAM,EAAG;AALA,KAAb,CAJc,CAWd;;AACA,SAAKX,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BY,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKN,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BM,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH,GAjBwB,CAkBzB;;;AACAE,EAAAA,kBAAkB,GAAE;AAChB,SAAKZ,QAAL,CAAc;AACVO,MAAAA,QAAQ,EAAG,KADD;AAEVC,MAAAA,GAAG,EAAG;AAFI,KAAd;AAIH,GAxBwB,CAyBzB;;;AAYA;AACC,QAAOG,WAAP,CAAmBZ,CAAnB,EAAsB;AAAA;;AACpB;AACC;AACAA,IAAAA,CAAC,CAACc,cAAF;AACA,UAAMC,IAAI,GAAG;AACTb,MAAAA,QAAQ,EAAG,KAAKK,KAAL,CAAWL,QADb;AAETI,MAAAA,QAAQ,EAAG,KAAKC,KAAL,CAAWD;AAFb,KAAb,CAJmB,CAQnB;;AACAf,IAAAA,KAAK,CAACyB,QAAN,CAAeC,eAAf,GAAiC,IAAjC,CATmB,CAUnB;;AACD,QAAMC,SAAS,GAAG,sBAAM,KAAKpB,KAAX,gDAAM,YAAYJ,IAAZ,CAAiBqB,IAAjB,CAAN,CAAlB;AACCI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB,EAAwBoB,SAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,iBAAY,KAAKtB,KAAjB,iDAAY,aAAYoB,SAAZ,CAAsB,CAAtB,EAAyBH,IAArC;;AAEY,QAAG,iBAAC,KAAKjB,KAAN,iDAAC,aAAYoB,SAAZ,CAAsB,CAAtB,EAAyBH,IAA1B,MAAoC,qCAAvC,EAA6E;AACzEI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAKnB,QAAL,CAAc;AACVQ,QAAAA,GAAG,EAAG,SADI;AAEVD,QAAAA,QAAQ,EAAE,IAFA;AAGVE,QAAAA,MAAM,EAAG;AAHC,OAAd;AAKH,KAPD,MASA;AACI,WAAKT,QAAL,CAAc;AACVQ,QAAAA,GAAG,EAAG,SADI;AAEVD,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAIH;;AACLW,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8B,KAAKb,KAAL,CAAWE,GAAzC;AACX;;AAEDY,EAAAA,MAAM,GAAE;AACJ;AACA,QAAIC,WAAW,GAAG,IAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKb,KAAL,CAAWE,GAApC;;AACA,QAAGjB,MAAM,CAAC+B,IAAP,CAAY,QAAZ,CAAH,EAAyB;AAErBD,MAAAA,WAAW,GAAG,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAEH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,WADL,EAEA;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAG;AAACE,QAAAA,SAAS,EAAC;AAAX,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADJ,EAKQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAO,MAAA,QAAQ,EAAI,KAAKzB,qBAAxB;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,SAAS,EAAC,cAArE;AAAoF,MAAA,IAAI,EAAC,UAAzF;AAAoG,MAAA,WAAW,EAAC,UAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALR,EASQ;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAO,MAAA,QAAQ,EAAI,KAAKM,qBAAxB;AAA+C,MAAA,IAAI,EAAC,UAApD;AAA+D,MAAA,SAAS,EAAC,cAAzE;AAAwF,MAAA,IAAI,EAAC,UAA7F;AAAwG,MAAA,WAAW,EAAC,UAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATR,EAaQ;AAAQ,MAAA,OAAO,EAAI,KAAKO,WAAxB;AAAqC,MAAA,SAAS,EAAC,iBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbR,CADJ,CAFJ,CAFA,CADJ;AAyBH;;AAzGwB;;AA4G7B,MAAMa,eAAe,GAAGlB,KAAK,KAAK;AAC9BW,EAAAA,SAAS,EAAGX,KAAK,CAACmB,KAAN,CAAYR;AADM,CAAL,CAA7B;;AAIA,eAAevB,OAAO,CAAE8B,eAAF,EAAkB;AAAC/B,EAAAA;AAAD,CAAlB,CAAP,CAAiCE,KAAjC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport {Redirect} from 'react-router';\nimport {auth} from '../../ReduxModules/actions/index';\nimport {connect} from 'react-redux';\n\n//Define a Login Component\nclass Login extends Component{\n    //call the constructor method\n    constructor(props){\n        //Call the constrictor of Super classNameName i.e The Component\n        super(props);\n        //maintain the state required for this component\n        this.state = {\n            username : \"\",\n            password : \"\",\n            authFlag : false,\n            msg: \"\",\n            errmsg : \"\"\n        }\n        //Bind the handlers to this className\n        this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n        this.submitLogin = this.submitLogin.bind(this);\n    }\n    //Call the Will Mount to set the auth Flag to false\n    componentWillMount(){\n        this.setState({\n            authFlag : false,\n            msg : \"abc\"\n        })\n    }\n    //username change handler to update state variable with the text entered by the user\n    usernameChangeHandler = (e) => {\n        this.setState({\n            username : e.target.value\n        })\n    }\n    //password change handler to update state variable with the text entered by the user\n    passwordChangeHandler = (e) => {\n        this.setState({\n            password : e.target.value\n        })\n    }\n    //submit Login handler to send a request to the node backend\n     async  submitLogin(e) {\n       // var headers = new Headers();\n        //prevent page from refresh\n        e.preventDefault();\n        const data = {\n            username : this.state.username,\n            password : this.state.password\n        }\n        //set the with credentials to true\n        axios.defaults.withCredentials = true;\n        //make a post request with the user data\n       var   loginData = await this.props?.auth(data);\n        console.log(this.props, loginData);\n        console.log(this.props?.loginData[0].data);\n                  \n                    if((this.props?.loginData[0].data) === \"Incorrect Username and/or Password!\"){\n                        console.log(\"inside student\");\n                        this.setState({\n                            msg : \"student\",\n                            authFlag :true,\n                            errmsg : \"Incorrect Username and/or Password!\"\n                        })\n                    }\n                    else\n                    {\n                        this.setState({\n                            msg : \"company\",\n                            authFlag: false\n                        })\n                    }\n                console.log(\"inside function\",this.state.msg);\n    }\n\n    render(){\n        //redirect based on successful login\n        let redirectVar = null;\n        console.log(\"message is\",this.state.msg);\n        if(cookie.load('cookie')){\n           \n            redirectVar = <Redirect to= \"/home\"/>\n           \n        }\n        return(\n            <div>\n                {redirectVar}\n            <div className=\"container\" style ={{marginTop:100}} >\n                \n                <div className=\"login-form\">\n                    <div className=\"main-div\">\n                        <div className=\"panel\">\n                            <h2>Student Signin</h2>\n                        </div>\n                        \n                            <div className=\"form-group\">\n                                <p>Username: </p>\n                                <input onChange = {this.usernameChangeHandler} type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Username\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <p>Password: </p>\n                                <input onChange = {this.passwordChangeHandler} type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\"/>\n                            </div>\n                            <button onClick = {this.submitLogin} className=\"btn btn-primary\">Login</button>                 \n                    </div>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    loginData : state.login.loginData,\n      });\n\nexport default connect (mapStateToProps,{auth})(Login);"]},"metadata":{},"sourceType":"module"}