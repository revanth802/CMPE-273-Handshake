{"ast":null,"code":"var _jsxFileName = \"/home/revanth802/Desktop/handshake/frontend/src/components/Login/Register.js\";\nimport React, { Component } from \"react\"; //import \"../../register.css\";\n\nimport axios from \"axios\";\nimport cookie from \"react-cookies\";\nimport { Redirect } from \"react-router\";\nimport { register } from '../../ReduxModules/actions/index';\nimport { connect } from 'react-redux';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props); //maintain the state required for this component\n\n    this.emailChangeHandler = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.firstnameChangeHandler = e => {\n      this.setState({\n        firstName: e.target.value\n      });\n    };\n\n    this.lastnameChangeHandler = e => {\n      this.setState({\n        lastName: e.target.value\n      });\n    };\n\n    this.roleChangeHandler = e => {\n      this.setState({\n        role: e.target.value\n      });\n    };\n\n    this.passnameChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      role: \"\",\n      username: \"\",\n      registerFlag: false\n    }; //Bind the handlers to this class\n\n    this.emailChangeHandler = this.emailChangeHandler.bind(this);\n    this.firstnameChangeHandler = this.firstnameChangeHandler.bind(this);\n    this.lastnameChangeHandler = this.lastnameChangeHandler.bind(this);\n    this.roleChangeHandler = this.roleChangeHandler.bind(this);\n    this.passnameChangeHandler = this.passnameChangeHandler.bind(this);\n    this.submitRegister = this.submitRegister.bind(this);\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n  }\n\n  async submitRegister(e) {\n    var _this$props, _this$props2;\n\n    // eslint-disable-next-line\n    var headers = new Headers(); //prevent page from refresh\n\n    e.preventDefault();\n    console.log(\"email is\", this.state.firstName);\n    const data = {\n      email: this.state.email,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      role: this.state.role,\n      password: this.state.password,\n      username: this.state.username\n    }; //set the with credentials to true\n\n    axios.defaults.withCredentials = true; //make a post request with the user data\n\n    var registerData = await ((_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.register(data));\n    console.log(\"Status Code : \", this.props);\n\n    if (((_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.registerData[0].status) === 200) {\n      this.setState({\n        registerFlag: true\n      });\n    } else {\n      this.setState({\n        registerFlag: false\n      });\n    }\n  }\n\n  render() {\n    //iterate over books to create a table row\n    //if not logged in go to login page\n    let redirectVar = null;\n\n    if (this.state.registerFlag) {\n      console.log(\"Register is:::\", this.state.registerFlag);\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      className: \"register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Register to Handshake\"), React.createElement(\"form\", {\n      action: \"register\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: this.emailChangeHandler,\n      placeholder: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.usernameChangeHandler,\n      placeholder: \"username\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.firstnameChangeHandler,\n      name: \"firstname\",\n      placeholder: \"firstname\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.lastnameChangeHandler,\n      name: \"lastName\",\n      placeholder: \"lastName\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.roleChangeHandler,\n      name: \"role\",\n      placeholder: \"role\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      onChange: this.passnameChangeHandler,\n      name: \"password\",\n      placeholder: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.submitRegister,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Register\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  registerData: state.register.registerData\n});\n\nexport default connect(mapStateToProps, {\n  register\n})(Register);","map":{"version":3,"sources":["/home/revanth802/Desktop/handshake/frontend/src/components/Login/Register.js"],"names":["React","Component","axios","cookie","Redirect","register","connect","Register","constructor","props","emailChangeHandler","e","setState","email","target","value","firstnameChangeHandler","firstName","lastnameChangeHandler","lastName","roleChangeHandler","role","passnameChangeHandler","password","usernameChangeHandler","username","state","registerFlag","bind","submitRegister","headers","Headers","preventDefault","console","log","data","defaults","withCredentials","registerData","status","render","redirectVar","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import \"../../register.css\";\nimport axios from \"axios\";\nimport cookie from \"react-cookies\";\nimport { Redirect } from \"react-router\";\nimport {register} from '../../ReduxModules/actions/index';\nimport {connect} from 'react-redux';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    //maintain the state required for this component\n    this.state = {\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      role:\"\",\n      username:\"\",\n      registerFlag: false\n    };\n    //Bind the handlers to this class\n    this.emailChangeHandler = this.emailChangeHandler.bind(this);\n    this.firstnameChangeHandler = this.firstnameChangeHandler.bind(this);\n    this.lastnameChangeHandler = this.lastnameChangeHandler.bind(this);\n    this.roleChangeHandler = this.roleChangeHandler.bind(this);\n    this.passnameChangeHandler = this.passnameChangeHandler.bind(this);\n    this.submitRegister = this.submitRegister.bind(this);\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n  }\n\n  \n  emailChangeHandler = e => {\n    this.setState({\n      email: e.target.value\n    });\n  };\n\n  firstnameChangeHandler = e => {\n    this.setState({\n      firstName: e.target.value\n    });\n  };\n\n  lastnameChangeHandler = e => {\n    this.setState({\n      lastName: e.target.value\n    });\n  };\n\n  roleChangeHandler = e => {\n    this.setState({\n      role: e.target.value\n    });\n  };\n\n  passnameChangeHandler = e => {\n    this.setState({\n      password: e.target.value\n    });\n  };\n\n  usernameChangeHandler = e=>{\n    this.setState({\n      username :e.target.value\n    })\n  }\n\n   async submitRegister (e)  {\n    // eslint-disable-next-line\n    var headers = new Headers();\n    //prevent page from refresh\n    e.preventDefault();\n    console.log(\"email is\", this.state.firstName);\n    const data = {\n      email: this.state.email,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      role: this.state.role,\n      password: this.state.password,\n      username:this.state.username\n    };\n    //set the with credentials to true\n    axios.defaults.withCredentials = true;\n    //make a post request with the user data\n    var   registerData = await this.props?.register(data);\n     console.log(\"Status Code : \", this.props);\n      if (this.props?.registerData[0].status === 200) {\n        this.setState({\n          registerFlag: true\n        });\n      } else {\n        this.setState({\n          registerFlag: false\n        });\n      }\n  };\n\n  render() {\n    //iterate over books to create a table row\n    //if not logged in go to login page\n    let redirectVar = null;\n    if (this.state.registerFlag) {\n      console.log(\"Register is:::\", this.state.registerFlag);\n      redirectVar = <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div>\n        {redirectVar}\n        \n          <div className=\"register-form\">\n            <h1>Register to Handshake</h1>\n            <form action=\"register\" method=\"POST\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                onChange={this.emailChangeHandler}\n                placeholder=\"email\"\n                required\n              />\n              <input\n                type=\"text\"\n                name=\"username\"\n                onChange={this.usernameChangeHandler}\n                placeholder=\"username\"\n                required\n              />\n              <input\n                type=\"text\"\n                onChange={this.firstnameChangeHandler}\n                name=\"firstname\"\n                placeholder=\"firstname\"\n                required\n              />\n              <input\n                type=\"text\"\n                onChange={this.lastnameChangeHandler}\n                name=\"lastName\"\n                placeholder=\"lastName\"\n                required\n              />\n              <input\n                type=\"text\"\n                onChange={this.roleChangeHandler}\n                name=\"role\"\n                placeholder=\"role\"\n                required\n              />\n              <input\n                type=\"password\"\n                onChange={this.passnameChangeHandler}\n                name=\"password\"\n                placeholder=\"Password\"\n                required\n              />\n              <button onClick={this.submitRegister} className=\"btn btn-primary\">\n                Register\n              </button>\n            </form>\n          </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  registerData : state.register.registerData,\n});\n\nexport default connect (mapStateToProps,{register})(Register);"]},"metadata":{},"sourceType":"module"}